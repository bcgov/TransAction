apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: jenkins
labels:
  template: api
objects:
<<<<<<< HEAD
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        shared: true
      name: ${NAME}
    spec:
      lookupPolicy:
        local: false
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      name: ${NAME}-static
    spec:
      lookupPolicy:
        local: false
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      creationTimestamp: null
      name: ${NAME}${SUFFIX}
    spec:
      completionDeadlineSeconds: 180
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:${VERSION}
      resources:
        limits:
          cpu: 500m
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 1Gi
      postCommit: {}
      source:
        git:
          uri: ${SOURCE_REPOSITORY_URL}
          ref: ${SOURCE_REPOSITORY_REF}
        type: Git
        contextDir: TransAction.API
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: "dotnet-22-rhel7:latest"
        type: Source
  #Chainned build
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      creationTimestamp: null
      labels:
        build: ${NAME}-static${SUFFIX}
      name: ${NAME}-static${SUFFIX}
    spec:
      nodeSelector: null
      completionDeadlineSeconds: 180
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}-static:${VERSION}
      postCommit: {}
      resources:
        requests:
          cpu: 1
        limits:
          cpu: 2
      source:
        dockerfile: |-
          FROM nodejs/build-output:latest
          COPY html /
          RUN npm install -g serve
          CMD serve -s /build
        images:
          - from:
              kind: ImageStreamTag
              name: "${NAME}:${VERSION}"
            paths:
              - destinationDir: html
                sourcePath: /opt/app-root/src/build/
        type: Dockerfile
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: "nodejs:latest"
            namespace: openshift
        type: Docker
=======
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      shared: true
    name: ${NAME}
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: ${NAME}${SUFFIX}
  spec:
    completionDeadlineSeconds: 180
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:${VERSION}
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi    
    postCommit: {}
    source:
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: DOTNET_STARTUP_PROJECT
          value: TransAction.API/TransAction.API.csproj
        from:
          kind: ImageStreamTag
          name: 'dotnet-22-rhel7:latest'
      type: Source
>>>>>>> Updated build and deploy configs to build/deploy all
parameters:
  - description: A name used for all objects
    displayName: Name
    name: NAME
    required: false
    value: "api"
  - description: A name suffix used for all objects
    displayName: Suffix
    name: SUFFIX
    required: false
    value: "-dev"
  - description: A version used for the image tags
    displayName: version
    name: VERSION
    required: false
    value: "1.0"
  - description: SOURCE_REPOSITORY_URL
    displayName: SOURCE_REPOSITORY_URL
    name: SOURCE_REPOSITORY_URL
    required: false
    value: "https://github.com/BCGov/transaction.git"
  - description: SOURCE_REPOSITORY_REF
    displayName: SOURCE_REPOSITORY_REF
    name: SOURCE_REPOSITORY_REF
    required: false
    value: "master"
