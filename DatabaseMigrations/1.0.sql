
GO
PRINT N'Creating [dbo].[TRA_ACTIVITY]...';


GO
CREATE TABLE [dbo].[TRA_ACTIVITY] (
    [ACTIVITY_ID]                INT            IDENTITY (1, 1) NOT NULL,
    [NAME]                       VARCHAR (1024) NOT NULL,
    [DESCRIPTION]                VARCHAR (255)  NULL,
    [INTENSITY]                  INT            NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME       NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30)   NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME       NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30)   NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT         NOT NULL,
    CONSTRAINT [PK_ACTIVITY] PRIMARY KEY CLUSTERED ([ACTIVITY_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_EVENT]...';


GO
CREATE TABLE [dbo].[TRA_EVENT] (
    [EVENT_ID]                   INT            IDENTITY (1, 1) NOT NULL,
    [START_DATE]                 DATETIME       NOT NULL,
    [END_DATE]                   DATETIME       NOT NULL,
    [NAME]                       VARCHAR (1024) NOT NULL,
    [DESCRIPTION]                TEXT           NOT NULL,
    [IS_ACTIVE]                  BIT            NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME       NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30)   NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME       NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30)   NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT         NOT NULL,
    CONSTRAINT [PK_EVENT] PRIMARY KEY CLUSTERED ([EVENT_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM]...';


GO
CREATE TABLE [dbo].[TRA_EVENT_TEAM] (
    [EVENT_TEAM_ID]              INT          IDENTITY (1, 1) NOT NULL,
    [EVENT_ID]                   INT          NOT NULL,
    [TEAM_ID]                    INT          NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME     NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30) NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME     NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30) NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT       NOT NULL,
    CONSTRAINT [PK_EVENT_TEAM] PRIMARY KEY CLUSTERED ([EVENT_TEAM_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM].[IX_FK_EVENT_TEAM_EVENT]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_EVENT_TEAM_EVENT]
    ON [dbo].[TRA_EVENT_TEAM]([EVENT_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM].[IX_FK_EVENT_TEAM_TEAM]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_EVENT_TEAM_TEAM]
    ON [dbo].[TRA_EVENT_TEAM]([TEAM_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_EVENT_USER]...';


GO
CREATE TABLE [dbo].[TRA_EVENT_USER] (
    [EVENT_USER_ID]              INT          IDENTITY (1, 1) NOT NULL,
    [EVENT_ID]                   INT          NOT NULL,
    [USER_ID]                    INT          NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME     NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30) NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME     NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30) NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT       NOT NULL,
    CONSTRAINT [PK_EVENT_USER] PRIMARY KEY CLUSTERED ([EVENT_USER_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_EVENT_USER].[IX_FK_EVENT_USER_EVENT]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_EVENT_USER_EVENT]
    ON [dbo].[TRA_EVENT_USER]([EVENT_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_EVENT_USER].[IX_FK_EVENT_USER_USER]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_EVENT_USER_USER]
    ON [dbo].[TRA_EVENT_USER]([USER_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_IMAGE]...';


GO
CREATE TABLE [dbo].[TRA_IMAGE] (
    [IMAGE_ID]                   INT             IDENTITY (1, 1) NOT NULL,
    [USER_ID]                    INT             NULL,
    [TEAM_ID]                    INT             NULL,
    [CAROUSEL]                   BIT             NOT NULL,
    [FILENAME]                   VARCHAR (1024)  NOT NULL,
    [FILESIZE]                   BIGINT          NOT NULL,
    [CONTENT_TYPE]               VARCHAR (512)   NOT NULL,
    [DATA]                       VARBINARY (MAX) NOT NULL,
    [WIDTH]                      INT             NOT NULL,
    [HEIGHT]                     INT             NOT NULL,
    [GUID]                       VARCHAR (36)    NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME        NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30)    NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME        NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30)    NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT          NOT NULL,
    CONSTRAINT [PK_IMAGE] PRIMARY KEY CLUSTERED ([IMAGE_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ]...';


GO
CREATE TABLE [dbo].[TRA_MEMBER_REQ] (
    [MEMBER_REQ_ID]              INT          IDENTITY (1, 1) NOT NULL,
    [USER_ID]                    INT          NOT NULL,
    [TEAM_ID]                    INT          NOT NULL,
    [IS_ACTIVE]                  BIT          NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME     NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30) NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME     NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30) NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT       NOT NULL,
    CONSTRAINT [PK_MEMBER_REQ] PRIMARY KEY CLUSTERED ([MEMBER_REQ_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ].[IX_FK_MEMBER_REQ_USER]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_MEMBER_REQ_USER]
    ON [dbo].[TRA_MEMBER_REQ]([USER_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ].[IX_FK_MEMBER_REQ_TEAM]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_MEMBER_REQ_TEAM]
    ON [dbo].[TRA_MEMBER_REQ]([TEAM_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_REGION]...';


GO
CREATE TABLE [dbo].[TRA_REGION] (
    [REGION_ID]                  INT           IDENTITY (1, 1) NOT NULL,
    [NAME]                       VARCHAR (255) NOT NULL,
    [DESCRIPTION]                TEXT          NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME      NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30)  NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME      NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30)  NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT        NOT NULL,
    CONSTRAINT [PK_REGION] PRIMARY KEY CLUSTERED ([REGION_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_ROLE]...';


GO
CREATE TABLE [dbo].[TRA_ROLE] (
    [ROLE_ID]                    INT            IDENTITY (1, 1) NOT NULL,
    [NAME]                       VARCHAR (255)  NOT NULL,
    [DESCRIPTION]                VARCHAR (1024) NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME       NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30)   NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME       NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30)   NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT         NOT NULL,
    CONSTRAINT [PK_ROLE] PRIMARY KEY CLUSTERED ([ROLE_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_TEAM]...';


GO
CREATE TABLE [dbo].[TRA_TEAM] (
    [TEAM_ID]                    INT           IDENTITY (1, 1) NOT NULL,
    [NAME]                       VARCHAR (255) NOT NULL,
    [REGION_ID]                  INT           NOT NULL,
    [DESCRIPTION]                TEXT          NOT NULL,
    [GOAL]                       INT           NOT NULL,
    [USER_ID]                    INT           NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME      NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30)  NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME      NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30)  NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT        NOT NULL,
    CONSTRAINT [PK_TEAM] PRIMARY KEY CLUSTERED ([TEAM_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_TOPIC]...';


GO
CREATE TABLE [dbo].[TRA_TOPIC] (
    [TOPIC_ID]                   INT            IDENTITY (1, 1) NOT NULL,
    [TITLE]                      VARCHAR (1024) NOT NULL,
    [USER_ID]                    INT            NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME       NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30)   NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME       NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30)   NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT         NOT NULL,
    CONSTRAINT [PK_TOPIC] PRIMARY KEY CLUSTERED ([TOPIC_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE]...';


GO
CREATE TABLE [dbo].[TRA_TOPIC_MESSAGE] (
    [TOPIC_MESSAGE_ID]           INT          IDENTITY (1, 1) NOT NULL,
    [USER_ID]                    INT          NOT NULL,
    [BODY]                       TEXT         NOT NULL,
    [TOPIC_ID]                   INT          NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME     NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30) NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME     NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30) NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT       NOT NULL,
    CONSTRAINT [PK_TOPIC_MESSAGE] PRIMARY KEY CLUSTERED ([TOPIC_MESSAGE_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE].[IX_FK_TOPIC_USER]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_TOPIC_USER]
    ON [dbo].[TRA_TOPIC_MESSAGE]([USER_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE].[IX_FK_TOPIC_MESSAGE_USER]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_TOPIC_MESSAGE_USER]
    ON [dbo].[TRA_TOPIC_MESSAGE]([USER_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE].[IX_FK_TOPIC_MESSAGE_TOPIC]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_TOPIC_MESSAGE_TOPIC]
    ON [dbo].[TRA_TOPIC_MESSAGE]([TOPIC_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_USER]...';


GO
CREATE TABLE [dbo].[TRA_USER] (
    [USER_ID]                    INT            IDENTITY (1, 1) NOT NULL,
    [USERNAME]                   VARCHAR (255)  NOT NULL,
    [DIRECTORY]                  VARCHAR (8)    NOT NULL,
    [GUID]                       VARCHAR (255)  NOT NULL,
    [REGION_ID]                  INT            NOT NULL,
    [FNAME]                      VARCHAR (255)  NOT NULL,
    [LNAME]                      VARCHAR (255)  NOT NULL,
    [DESCRIPTION]                VARCHAR (1024) NOT NULL,
    [EMAIL]                      VARCHAR (1024) NOT NULL,
    [ROLE_ID]                    INT            NOT NULL,
    [TEAM_ID]                    INT            NULL,
    [IS_FREE_AGENT]              BIT            NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME       NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30)   NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME       NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30)   NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT         NOT NULL,
    CONSTRAINT [PK_USER] PRIMARY KEY CLUSTERED ([USER_ID] ASC),
    UNIQUE NONCLUSTERED ([GUID] ASC),
    CONSTRAINT [UK_TRA_USER_GUID] UNIQUE NONCLUSTERED ([GUID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_USER].[IX_FK_USER_ROLE]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_USER_ROLE]
    ON [dbo].[TRA_USER]([ROLE_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_USER].[IX_FK_USER_TEAM]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_USER_TEAM]
    ON [dbo].[TRA_USER]([TEAM_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY]...';


GO
CREATE TABLE [dbo].[TRA_USER_ACTIVITY] (
    [USER_ACTIVITY_ID]           INT            IDENTITY (1, 1) NOT NULL,
    [NAME]                       VARCHAR (1024) NOT NULL,
    [DESCRIPTION]                TEXT           NOT NULL,
    [MINUTES]                    INT            NOT NULL,
    [ACTIVITY_TIMESTAMP]         DATETIME       NOT NULL,
    [USER_ID]                    INT            NOT NULL,
    [ACTIVITY_ID]                INT            NOT NULL,
    [TEAM_ID]                    INT            NOT NULL,
    [EVENT_ID]                   INT            NOT NULL,
    [DB_CREATE_TIMESTAMP]        DATETIME       NOT NULL,
    [DB_CREATE_USERID]           VARCHAR (30)   NOT NULL,
    [DB_LAST_UPDATE_TIMESTAMP]   DATETIME       NOT NULL,
    [DB_LAST_UPDATE_USERID]      VARCHAR (30)   NOT NULL,
    [CONCURRENCY_CONTROL_NUMBER] BIGINT         NOT NULL,
    CONSTRAINT [PK_USER_ACTIVITY] PRIMARY KEY CLUSTERED ([USER_ACTIVITY_ID] ASC)
);


GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY].[IX_FK_USER_ACTIVITY_USER]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_USER_ACTIVITY_USER]
    ON [dbo].[TRA_USER_ACTIVITY]([USER_ID] ASC);


GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY].[IX_FK_USER_ACTIVITY_ACTIVITY]...';


GO
CREATE NONCLUSTERED INDEX [IX_FK_USER_ACTIVITY_ACTIVITY]
    ON [dbo].[TRA_USER_ACTIVITY]([ACTIVITY_ID] ASC);


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_ACTIVITY]...';


GO
ALTER TABLE [dbo].[TRA_ACTIVITY]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_EVENT]...';


GO
ALTER TABLE [dbo].[TRA_EVENT]
    ADD DEFAULT 1 FOR [IS_ACTIVE];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_EVENT]...';


GO
ALTER TABLE [dbo].[TRA_EVENT]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_EVENT_TEAM]...';


GO
ALTER TABLE [dbo].[TRA_EVENT_TEAM]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_EVENT_USER]...';


GO
ALTER TABLE [dbo].[TRA_EVENT_USER]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_IMAGE]...';


GO
ALTER TABLE [dbo].[TRA_IMAGE]
    ADD DEFAULT 0 FOR [CAROUSEL];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_IMAGE]...';


GO
ALTER TABLE [dbo].[TRA_IMAGE]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_MEMBER_REQ]...';


GO
ALTER TABLE [dbo].[TRA_MEMBER_REQ]
    ADD DEFAULT 1 FOR [IS_ACTIVE];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_MEMBER_REQ]...';


GO
ALTER TABLE [dbo].[TRA_MEMBER_REQ]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_REGION]...';


GO
ALTER TABLE [dbo].[TRA_REGION]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_ROLE]...';


GO
ALTER TABLE [dbo].[TRA_ROLE]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_TEAM]...';


GO
ALTER TABLE [dbo].[TRA_TEAM]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_TOPIC]...';


GO
ALTER TABLE [dbo].[TRA_TOPIC]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_TOPIC_MESSAGE]...';


GO
ALTER TABLE [dbo].[TRA_TOPIC_MESSAGE]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_USER]...';


GO
ALTER TABLE [dbo].[TRA_USER]
    ADD DEFAULT 0 FOR [IS_FREE_AGENT];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_USER]...';


GO
ALTER TABLE [dbo].[TRA_USER]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating unnamed constraint on [dbo].[TRA_USER_ACTIVITY]...';


GO
ALTER TABLE [dbo].[TRA_USER_ACTIVITY]
    ADD DEFAULT 1 FOR [CONCURRENCY_CONTROL_NUMBER];


GO
PRINT N'Creating [dbo].[FK_EVENT_TEAM_EVENT]...';


GO
ALTER TABLE [dbo].[TRA_EVENT_TEAM] WITH NOCHECK
    ADD CONSTRAINT [FK_EVENT_TEAM_EVENT] FOREIGN KEY ([EVENT_ID]) REFERENCES [dbo].[TRA_EVENT] ([EVENT_ID]);


GO
PRINT N'Creating [dbo].[FK_EVENT_TEAM_TEAM]...';


GO
ALTER TABLE [dbo].[TRA_EVENT_TEAM] WITH NOCHECK
    ADD CONSTRAINT [FK_EVENT_TEAM_TEAM] FOREIGN KEY ([TEAM_ID]) REFERENCES [dbo].[TRA_TEAM] ([TEAM_ID]);


GO
PRINT N'Creating [dbo].[FK_EVENT_USER_EVENT]...';


GO
ALTER TABLE [dbo].[TRA_EVENT_USER] WITH NOCHECK
    ADD CONSTRAINT [FK_EVENT_USER_EVENT] FOREIGN KEY ([EVENT_ID]) REFERENCES [dbo].[TRA_EVENT] ([EVENT_ID]);


GO
PRINT N'Creating [dbo].[FK_EVENT_USER_USER]...';


GO
ALTER TABLE [dbo].[TRA_EVENT_USER] WITH NOCHECK
    ADD CONSTRAINT [FK_EVENT_USER_USER] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[TRA_USER] ([USER_ID]);


GO
PRINT N'Creating [dbo].[TRA_IMAGE_USER]...';


GO
ALTER TABLE [dbo].[TRA_IMAGE] WITH NOCHECK
    ADD CONSTRAINT [TRA_IMAGE_USER] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[TRA_USER] ([USER_ID]);


GO
PRINT N'Creating [dbo].[TRA_IMAGE_TEAM]...';


GO
ALTER TABLE [dbo].[TRA_IMAGE] WITH NOCHECK
    ADD CONSTRAINT [TRA_IMAGE_TEAM] FOREIGN KEY ([TEAM_ID]) REFERENCES [dbo].[TRA_TEAM] ([TEAM_ID]);


GO
PRINT N'Creating [dbo].[FK_MEMBER_REQ_TEAM]...';


GO
ALTER TABLE [dbo].[TRA_MEMBER_REQ] WITH NOCHECK
    ADD CONSTRAINT [FK_MEMBER_REQ_TEAM] FOREIGN KEY ([TEAM_ID]) REFERENCES [dbo].[TRA_TEAM] ([TEAM_ID]);


GO
PRINT N'Creating [dbo].[FK_MEMBER_REQ_USER]...';


GO
ALTER TABLE [dbo].[TRA_MEMBER_REQ] WITH NOCHECK
    ADD CONSTRAINT [FK_MEMBER_REQ_USER] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[TRA_USER] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK_TEAM_USER]...';


GO
ALTER TABLE [dbo].[TRA_TEAM] WITH NOCHECK
    ADD CONSTRAINT [FK_TEAM_USER] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[TRA_USER] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK_TEAM_REGION]...';


GO
ALTER TABLE [dbo].[TRA_TEAM] WITH NOCHECK
    ADD CONSTRAINT [FK_TEAM_REGION] FOREIGN KEY ([REGION_ID]) REFERENCES [dbo].[TRA_REGION] ([REGION_ID]);


GO
PRINT N'Creating [dbo].[FK_TOPIC_USER]...';


GO
ALTER TABLE [dbo].[TRA_TOPIC] WITH NOCHECK
    ADD CONSTRAINT [FK_TOPIC_USER] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[TRA_USER] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK_TOPIC_MESSAGE_TOPIC]...';


GO
ALTER TABLE [dbo].[TRA_TOPIC_MESSAGE] WITH NOCHECK
    ADD CONSTRAINT [FK_TOPIC_MESSAGE_TOPIC] FOREIGN KEY ([TOPIC_ID]) REFERENCES [dbo].[TRA_TOPIC] ([TOPIC_ID]);


GO
PRINT N'Creating [dbo].[FK_TOPIC_MESSAGE_USER]...';


GO
ALTER TABLE [dbo].[TRA_TOPIC_MESSAGE] WITH NOCHECK
    ADD CONSTRAINT [FK_TOPIC_MESSAGE_USER] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[TRA_USER] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK_USER_ROLE]...';


GO
ALTER TABLE [dbo].[TRA_USER] WITH NOCHECK
    ADD CONSTRAINT [FK_USER_ROLE] FOREIGN KEY ([ROLE_ID]) REFERENCES [dbo].[TRA_ROLE] ([ROLE_ID]);


GO
PRINT N'Creating [dbo].[FK_USER_TEAM]...';


GO
ALTER TABLE [dbo].[TRA_USER] WITH NOCHECK
    ADD CONSTRAINT [FK_USER_TEAM] FOREIGN KEY ([TEAM_ID]) REFERENCES [dbo].[TRA_TEAM] ([TEAM_ID]);


GO
PRINT N'Creating [dbo].[FK_USER_REGION]...';


GO
ALTER TABLE [dbo].[TRA_USER] WITH NOCHECK
    ADD CONSTRAINT [FK_USER_REGION] FOREIGN KEY ([REGION_ID]) REFERENCES [dbo].[TRA_REGION] ([REGION_ID]);


GO
PRINT N'Creating [dbo].[FK_USER_ACTIVITY_ACTIVITY]...';


GO
ALTER TABLE [dbo].[TRA_USER_ACTIVITY] WITH NOCHECK
    ADD CONSTRAINT [FK_USER_ACTIVITY_ACTIVITY] FOREIGN KEY ([ACTIVITY_ID]) REFERENCES [dbo].[TRA_ACTIVITY] ([ACTIVITY_ID]);


GO
PRINT N'Creating [dbo].[FK_USER_ACTIVITY_USER]...';


GO
ALTER TABLE [dbo].[TRA_USER_ACTIVITY] WITH NOCHECK
    ADD CONSTRAINT [FK_USER_ACTIVITY_USER] FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[TRA_USER] ([USER_ID]);


GO
PRINT N'Creating [dbo].[FK_USER_ACTIVITY_TEAM]...';


GO
ALTER TABLE [dbo].[TRA_USER_ACTIVITY] WITH NOCHECK
    ADD CONSTRAINT [FK_USER_ACTIVITY_TEAM] FOREIGN KEY ([TEAM_ID]) REFERENCES [dbo].[TRA_TEAM] ([TEAM_ID]);


GO
PRINT N'Creating [dbo].[FK_USER_ACTIVITY_EVENT]...';


GO
ALTER TABLE [dbo].[TRA_USER_ACTIVITY] WITH NOCHECK
    ADD CONSTRAINT [FK_USER_ACTIVITY_EVENT] FOREIGN KEY ([EVENT_ID]) REFERENCES [dbo].[TRA_EVENT] ([EVENT_ID]);


GO
PRINT N'Creating [dbo].[TRA_ACTIVITY_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_ACTIVITY_IS_U_TR] 
   ON  [dbo].[TRA_ACTIVITY]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_ACTIVITY WHERE TRA_ACTIVITY.ACTIVITY_ID = (SELECT ACTIVITY_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_ACTIVITY
	SET
	TRA_ACTIVITY.NAME = inserted.NAME,
	TRA_ACTIVITY.DESCRIPTION = inserted.DESCRIPTION,
	TRA_ACTIVITY.INTENSITY = inserted.INTENSITY,
	TRA_ACTIVITY.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_ACTIVITY.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_ACTIVITY.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_ACTIVITY.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_ACTIVITY.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER 
	FROM TRA_ACTIVITY 
	INNER JOIN  inserted 
	ON TRA_ACTIVITY.ACTIVITY_ID = inserted.ACTIVITY_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_ACTIVITY_AS_I_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_ACTIVITY_AS_I_TR] 
   ON  [dbo].[TRA_ACTIVITY]
   AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_ACTIVITY
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_ACTIVITY.ACTIVITY_ID = inserted.ACTIVITY_ID

END
GO
PRINT N'Creating [dbo].[TRA_EVENT_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_EVENT_IS_U_TR] 
   ON  [dbo].[TRA_EVENT]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_EVENT WHERE TRA_EVENT.EVENT_ID = (SELECT EVENT_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_EVENT
	SET
	TRA_EVENT.NAME = inserted.NAME,
	TRA_EVENT.START_DATE = inserted.START_DATE,
	TRA_EVENT.END_DATE = inserted.END_DATE,
	TRA_EVENT.DESCRIPTION = inserted.DESCRIPTION,
	TRA_EVENT.IS_ACTIVE = inserted.IS_ACTIVE,
	TRA_EVENT.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_EVENT.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_EVENT.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_EVENT.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_EVENT.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_EVENT 
	INNER JOIN  inserted 
	ON TRA_EVENT.EVENT_ID = inserted.EVENT_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_EVENT_AS_I_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_EVENT_AS_I_TR] 
   ON  [dbo].[TRA_EVENT]
   AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_EVENT
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_EVENT.EVENT_ID = inserted.EVENT_ID

END
GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_EVENT_TEAM_IS_U_TR] 
	 ON  [dbo].[TRA_EVENT_TEAM]
	 INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_EVENT_TEAM WHERE TRA_EVENT_TEAM.EVENT_TEAM_ID = (SELECT TEAM_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_EVENT_TEAM
	SET
	TRA_EVENT_TEAM.EVENT_ID = inserted.EVENT_ID,
	TRA_EVENT_TEAM.TEAM_ID = inserted.TEAM_ID,
	TRA_EVENT_TEAM.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_EVENT_TEAM.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_EVENT_TEAM.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_EVENT_TEAM.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_EVENT_TEAM.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_EVENT_TEAM 
	INNER JOIN  inserted 
	ON TRA_EVENT_TEAM.EVENT_TEAM_ID = inserted.EVENT_TEAM_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM_AS_I_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_EVENT_TEAM_AS_I_TR] 
   ON  [dbo].[TRA_EVENT_TEAM]
   AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_EVENT_TEAM
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_EVENT_TEAM.EVENT_TEAM_ID = inserted.EVENT_TEAM_ID

END
GO
PRINT N'Creating [dbo].[TRA_EVENT_USER_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_EVENT_USER_IS_U_TR] 
   ON  [dbo].[TRA_EVENT_USER]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_EVENT_USER WHERE TRA_EVENT_USER.EVENT_USER_ID = (SELECT EVENT_USER_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_EVENT_USER
	SET
	TRA_EVENT_USER.EVENT_ID = inserted.EVENT_ID,
	TRA_EVENT_USER.USER_ID = inserted.USER_ID,
	TRA_EVENT_USER.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_EVENT_USER.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_EVENT_USER.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_EVENT_USER.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_EVENT_USER.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_EVENT_USER 
	INNER JOIN  inserted 
	ON TRA_EVENT_USER.EVENT_USER_ID = inserted.EVENT_USER_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_EVENT_USER_AS_I_TR]...';


GO
 CREATE TRIGGER [dbo].[TRA_EVENT_USER_AS_I_TR] 
   ON  [dbo].[TRA_EVENT_USER]
   AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_EVENT_USER
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_EVENT_USER.EVENT_USER_ID = inserted.EVENT_USER_ID

END
GO
PRINT N'Creating [dbo].[TRA_IMAGE_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_IMAGE_IS_U_TR] 
   ON  [dbo].[TRA_IMAGE]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @CONC INT;
	SET @CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_IMAGE WHERE TRA_IMAGE.IMAGE_ID = (SELECT IMAGE_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_IMAGE
	SET
	TRA_IMAGE.[USER_ID] = inserted.[USER_ID],
	TRA_IMAGE.[TEAM_ID] = inserted.[TEAM_ID],
	TRA_IMAGE.[CAROUSEL] = inserted.[CAROUSEL],	
	TRA_IMAGE.[FILENAME] = inserted.[FILENAME],
	TRA_IMAGE.[FILESIZE] = inserted.[FILESIZE],
	TRA_IMAGE.[CONTENT_TYPE] = inserted.[CONTENT_TYPE],
	TRA_IMAGE.[DATA] = inserted.[DATA],
	TRA_IMAGE.[WIDTH] = inserted.[WIDTH],
	TRA_IMAGE.[HEIGHT] = inserted.[HEIGHT],
	TRA_IMAGE.[GUID] = inserted.[GUID],
	TRA_IMAGE.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_IMAGE.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_IMAGE.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_IMAGE.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_IMAGE.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER 
	FROM TRA_IMAGE 
	INNER JOIN  inserted 
	ON TRA_IMAGE.IMAGE_ID = inserted.IMAGE_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_IMAGE_AS_I_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_IMAGE_AS_I_TR] 
   ON  [dbo].[TRA_IMAGE]
   AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_IMAGE
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_IMAGE.IMAGE_ID = inserted.IMAGE_ID

END
GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ_IS_U_TR]...';


GO
	CREATE TRIGGER [dbo].[TRA_MEMBER_REQ_IS_U_TR] 
   ON  [dbo].[TRA_MEMBER_REQ]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_MEMBER_REQ WHERE TRA_MEMBER_REQ.MEMBER_REQ_ID = (SELECT MEMBER_REQ_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_MEMBER_REQ
	SET
	TRA_MEMBER_REQ.USER_ID = inserted.USER_ID,
	TRA_MEMBER_REQ.TEAM_ID = inserted.TEAM_ID,
	TRA_MEMBER_REQ.IS_ACTIVE = inserted.IS_ACTIVE,
	TRA_MEMBER_REQ.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_MEMBER_REQ.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_MEMBER_REQ.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_MEMBER_REQ.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_MEMBER_REQ.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_MEMBER_REQ 
	INNER JOIN  inserted 
	ON TRA_MEMBER_REQ.MEMBER_REQ_ID = inserted.MEMBER_REQ_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ_AS_I_TR]...';


GO
CREATE   TRIGGER [dbo].[TRA_MEMBER_REQ_AS_I_TR] 
   ON  [dbo].[TRA_MEMBER_REQ]
   AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_MEMBER_REQ
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_MEMBER_REQ.MEMBER_REQ_ID = inserted.MEMBER_REQ_ID

END
GO
PRINT N'Creating [dbo].[TRA_REGION_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_REGION_IS_U_TR] 
   ON  [dbo].[TRA_REGION]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_REGION WHERE TRA_REGION.REGION_ID = (SELECT REGION_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_REGION
	SET
	TRA_REGION.NAME = inserted.NAME,
	TRA_REGION.DESCRIPTION = inserted.DESCRIPTION,
	TRA_REGION.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_REGION.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_REGION.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_REGION.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_REGION.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_REGION 
	INNER JOIN  inserted 
	ON TRA_REGION.REGION_ID = inserted.REGION_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_REGION_AS_I_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_REGION_AS_I_TR] 
   ON  [dbo].[TRA_REGION]
   AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_REGION
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_REGION.REGION_ID = inserted.REGION_ID

END
GO
PRINT N'Creating [dbo].[TRA_ROLE_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_ROLE_IS_U_TR] 
   ON  [dbo].[TRA_ROLE]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_ROLE WHERE TRA_ROLE.ROLE_ID = (SELECT ROLE_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_ROLE
	SET
	TRA_ROLE.NAME = inserted.NAME,
	TRA_ROLE.DESCRIPTION = inserted.DESCRIPTION,
	TRA_ROLE.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_ROLE.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_ROLE.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_ROLE.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_ROLE.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_ROLE 
	INNER JOIN  inserted 
	ON TRA_ROLE.ROLE_ID = inserted.ROLE_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_ROLE_AS_I_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_ROLE_AS_I_TR] 
   ON  [dbo].[TRA_ROLE]
   AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_ROLE
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_ROLE.ROLE_ID = inserted.ROLE_ID

END
GO
PRINT N'Creating [dbo].[TRA_TEAM_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_TEAM_IS_U_TR] 
   ON  [dbo].[TRA_TEAM]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_TEAM WHERE TRA_TEAM.TEAM_ID = (SELECT TEAM_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_TEAM
	SET
	TRA_TEAM.NAME = inserted.NAME,
	TRA_TEAM.REGION_ID = inserted.REGION_ID,
	TRA_TEAM.DESCRIPTION = inserted.DESCRIPTION,
	TRA_TEAM.USER_ID = inserted.USER_ID,
	TRA_TEAM.GOAL = inserted.GOAL,
	TRA_TEAM.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_TEAM.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_TEAM.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_TEAM.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_TEAM.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_TEAM 
	INNER JOIN  inserted 
	ON TRA_TEAM.TEAM_ID = inserted.TEAM_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_TEAM_AS_I_TR]...';


GO

CREATE TRIGGER [dbo].[TRA_TEAM_AS_I_TR] 
	ON  [dbo].[TRA_TEAM]
	AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_TEAM
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_TEAM.TEAM_ID = inserted.TEAM_ID

END
GO
PRINT N'Creating [dbo].[TRA_TOPIC_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_TOPIC_IS_U_TR] 
   ON  [dbo].[TRA_TOPIC]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_TOPIC WHERE TRA_TOPIC.TOPIC_ID = (SELECT TOPIC_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_TOPIC
	SET
	TRA_TOPIC.TITLE = inserted.TITLE,
	TRA_TOPIC.USER_ID = inserted.USER_ID,
	TRA_TOPIC.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_TOPIC.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_TOPIC.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_TOPIC.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_TOPIC.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_TOPIC 
	INNER JOIN  inserted 
	ON TRA_TOPIC.TOPIC_ID = inserted.TOPIC_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_TOPIC_AS_I_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_TOPIC_AS_I_TR]
    ON [dbo].[TRA_TOPIC]
	AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_TOPIC
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_TOPIC.TOPIC_ID = inserted.TOPIC_ID

END
GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE_IS_U_TR]...';


GO
	CREATE TRIGGER [dbo].[TRA_TOPIC_MESSAGE_IS_U_TR] 
   ON  [dbo].[TRA_TOPIC_MESSAGE]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_TOPIC_MESSAGE WHERE TRA_TOPIC_MESSAGE.TOPIC_MESSAGE_ID = (SELECT TOPIC_MESSAGE_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_TOPIC_MESSAGE
	SET
	TRA_TOPIC_MESSAGE.USER_ID = inserted.USER_ID,
	TRA_TOPIC_MESSAGE.BODY = inserted.BODY,
	TRA_TOPIC_MESSAGE.TOPIC_ID = inserted.TOPIC_ID,
	TRA_TOPIC_MESSAGE.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_TOPIC_MESSAGE.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_TOPIC_MESSAGE.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_TOPIC_MESSAGE.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_TOPIC_MESSAGE.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_TOPIC_MESSAGE 
	INNER JOIN  inserted 
	ON TRA_TOPIC_MESSAGE.TOPIC_MESSAGE_ID = inserted.TOPIC_MESSAGE_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE_AS_I_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_TOPIC_MESSAGE_AS_I_TR]
    ON [dbo].[TRA_TOPIC_MESSAGE]
	AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_TOPIC_MESSAGE
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_TOPIC_MESSAGE.TOPIC_MESSAGE_ID = inserted.TOPIC_MESSAGE_ID

END
GO
PRINT N'Creating [dbo].[TRA_USER_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_USER_IS_U_TR] 
   ON  [dbo].[TRA_USER]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @FAIL_COUNT INT;
	SET @FAIL_COUNT = (
		SELECT COUNT(*) 
		FROM TRA_USER

		JOIN inserted 
		ON TRA_USER.USER_ID = inserted.USER_ID

		WHERE TRA_USER.CONCURRENCY_CONTROL_NUMBER + 1 != inserted.CONCURRENCY_CONTROL_NUMBER
	)


	IF(@FAIL_COUNT != 0)	 
		BEGIN
		RAISERROR('Concurrency Failure',16,10068);
		RETURN
	END
	
	ELSE
	BEGIN 	
		UPDATE TRA_USER

		SET
			TRA_USER.USERNAME = inserted.USERNAME,
			TRA_USER.[DIRECTORY] = inserted.[DIRECTORY],
			TRA_USER.GUID = inserted.GUID,
			TRA_USER.REGION_ID = inserted.REGION_ID,
			TRA_USER.FNAME = inserted.FNAME,
			TRA_USER.LNAME = inserted.LNAME,
			TRA_USER.DESCRIPTION = inserted.DESCRIPTION,
			TRA_USER.EMAIL = inserted.EMAIL,
			TRA_USER.ROLE_ID = inserted.ROLE_ID,
			TRA_USER.TEAM_ID = inserted.TEAM_ID,
			TRA_USER.IS_FREE_AGENT = inserted.IS_FREE_AGENT,
			TRA_USER.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
			TRA_USER.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
			TRA_USER.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
			TRA_USER.DB_LAST_UPDATE_USERID = CURRENT_USER,
			TRA_USER.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
		FROM TRA_USER 

		INNER JOIN  inserted 
		ON TRA_USER.USER_ID = inserted.USER_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_USER_AS_I_TR]...';


GO


CREATE TRIGGER [dbo].[TRA_USER_AS_I_TR]
    ON [dbo].[TRA_USER]
	AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_USER
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_USER.[USER_ID] = inserted.[USER_ID]

END
GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY_IS_U_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_USER_ACTIVITY_IS_U_TR] 
   ON  [dbo].[TRA_USER_ACTIVITY]
   INSTEAD OF UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @TEAM_CONC INT;
	SET @TEAM_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM TRA_USER_ACTIVITY WHERE TRA_USER_ACTIVITY.USER_ACTIVITY_ID = (SELECT USER_ACTIVITY_ID FROM inserted));
	DECLARE @INSERTED_CONC INT;
	SET @INSERTED_CONC = (SELECT CONCURRENCY_CONTROL_NUMBER FROM inserted);

	IF((@INSERTED_CONC) - (@TEAM_CONC) != 1)	 
	BEGIN
	RAISERROR('Concurrency Failure',16,10068);
	RETURN
	END
	
	ELSE
	BEGIN 	
	UPDATE TRA_USER_ACTIVITY
	SET
	TRA_USER_ACTIVITY.DESCRIPTION = inserted.DESCRIPTION,
	TRA_USER_ACTIVITY.NAME = inserted.NAME,
	TRA_USER_ACTIVITY.[MINUTES] = inserted.[MINUTES],
	TRA_USER_ACTIVITY.ACTIVITY_TIMESTAMP = inserted.ACTIVITY_TIMESTAMP,
	TRA_USER_ACTIVITY.USER_ID = inserted.USER_ID,
	TRA_USER_ACTIVITY.TEAM_ID = inserted.TEAM_ID,
	TRA_USER_ACTIVITY.EVENT_ID = inserted.EVENT_ID,
	TRA_USER_ACTIVITY.ACTIVITY_ID = inserted.ACTIVITY_ID,
	TRA_USER_ACTIVITY.DB_CREATE_TIMESTAMP =	inserted.DB_CREATE_TIMESTAMP,
	TRA_USER_ACTIVITY.DB_CREATE_USERID = inserted.DB_CREATE_USERID,
	TRA_USER_ACTIVITY.DB_LAST_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
	TRA_USER_ACTIVITY.DB_LAST_UPDATE_USERID = CURRENT_USER,
	TRA_USER_ACTIVITY.CONCURRENCY_CONTROL_NUMBER = inserted.CONCURRENCY_CONTROL_NUMBER
	FROM TRA_USER_ACTIVITY 
	INNER JOIN  inserted 
	ON TRA_USER_ACTIVITY.USER_ACTIVITY_ID = inserted.USER_ACTIVITY_ID;	
	END

END
GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY_AS_I_TR]...';


GO
CREATE TRIGGER [dbo].[TRA_USER_ACTIVITY_AS_I_TR]
    ON [dbo].[TRA_USER_ACTIVITY]
	AFTER INSERT
AS 
BEGIN
	
	SET NOCOUNT ON;

	UPDATE TRA_USER_ACTIVITY
	SET [DB_CREATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_CREATE_USERID] = CURRENT_USER
      ,[DB_LAST_UPDATE_TIMESTAMP] = CURRENT_TIMESTAMP
      ,[DB_LAST_UPDATE_USERID] = CURRENT_USER
      ,[CONCURRENCY_CONTROL_NUMBER] = 1

	FROM inserted
	WHERE TRA_USER_ACTIVITY.ACTIVITY_ID = inserted.ACTIVITY_ID

END
GO
PRINT N'Creating [dbo].[TRA_TEAM_VW]...';


GO
CREATE VIEW [dbo].[TRA_TEAM_VW]
	AS  SELECT *, NumMembers = (SELECT  COUNT(USER_ID)  FROM TRA_USER WHERE TRA_USER.TEAM_ID = TRA_TEAM.TEAM_ID) FROM TRA_TEAM
GO
PRINT N'Creating [dbo].[TRA_USER_VW]...';


GO
CREATE VIEW [dbo].[TRA_USER_VW]
	AS 

	SELECT 
		 U.* 
		,I.[GUID] AS [PROFILE_IMAGE_GUID]
	
	FROM [dbo].[TRA_USER] U

	LEFT JOIN [dbo].[TRA_IMAGE] I
	ON U.[USER_ID] = I.[USER_ID]
GO
PRINT N'Creating [dbo].[TRA_ACTIVITY].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track of all the activites', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ACTIVITY';


GO
PRINT N'Creating [dbo].[TRA_ACTIVITY].[NAME].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the activity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ACTIVITY', @level2type = N'COLUMN', @level2name = N'NAME';


GO
PRINT N'Creating [dbo].[TRA_ACTIVITY].[DESCRIPTION].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Description of the activity if the user selects "Other" option', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ACTIVITY', @level2type = N'COLUMN', @level2name = N'DESCRIPTION';


GO
PRINT N'Creating [dbo].[TRA_ACTIVITY].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ACTIVITY', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_ACTIVITY].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ACTIVITY', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_ACTIVITY].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ACTIVITY', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_ACTIVITY].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ACTIVITY', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_EVENT].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track of the Events', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT';


GO
PRINT N'Creating [dbo].[TRA_EVENT].[IS_ACTIVE].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track if the event is active (1 is active)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT', @level2type = N'COLUMN', @level2name = N'IS_ACTIVE';


GO
PRINT N'Creating [dbo].[TRA_EVENT].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_EVENT].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_EVENT].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_EVENT].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track of all the events and the teams  that participated in it', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_TEAM';


GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_TEAM', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_TEAM', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_TEAM', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_EVENT_TEAM].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_TEAM', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_EVENT_USER].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track of all the events and the users that participated in it', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_USER';


GO
PRINT N'Creating [dbo].[TRA_EVENT_USER].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_USER', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_EVENT_USER].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_USER', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_EVENT_USER].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_USER', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_EVENT_USER].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_EVENT_USER', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[USER_ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID Foreign Key for identifying user profile images', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'USER_ID';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[TEAM_ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Team ID Foreign Key for identifying team profile images', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'TEAM_ID';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[DATA].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Binary data of the images', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'DATA';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[WIDTH].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Image width in pixels', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'WIDTH';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[HEIGHT].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Image height in pixels', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'HEIGHT';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[GUID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'GUID for retrieving images', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'GUID';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_IMAGE].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_IMAGE', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track of the req sent by a user to a team', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_MEMBER_REQ';


GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ].[IS_ACTIVE].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track if the member reqis active', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_MEMBER_REQ', @level2type = N'COLUMN', @level2name = N'IS_ACTIVE';


GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_MEMBER_REQ', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_MEMBER_REQ', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_MEMBER_REQ', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_MEMBER_REQ].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_MEMBER_REQ', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_REGION].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_REGION', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_REGION].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_REGION', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_REGION].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_REGION', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_REGION].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_REGION', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_ROLE].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track of the three roles', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ROLE';


GO
PRINT N'Creating [dbo].[TRA_ROLE].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ROLE', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_ROLE].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ROLE', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_ROLE].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ROLE', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_ROLE].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_ROLE', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_TEAM].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track of the team infromation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TEAM';


GO
PRINT N'Creating [dbo].[TRA_TEAM].[GOAL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This is the goal team leader sets for the whole team', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TEAM', @level2type = N'COLUMN', @level2name = N'GOAL';


GO
PRINT N'Creating [dbo].[TRA_TEAM].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TEAM', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_TEAM].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TEAM', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_TEAM].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TEAM', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_TEAM].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TEAM', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_TOPIC].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track of the topics in a message board', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC';


GO
PRINT N'Creating [dbo].[TRA_TOPIC].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_TOPIC].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_TOPIC].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_TOPIC].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps travk of all the messages under a topic', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC_MESSAGE';


GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC_MESSAGE', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC_MESSAGE', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC_MESSAGE', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_TOPIC_MESSAGE].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_TOPIC_MESSAGE', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_USER].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track and contains all the information about the user', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER';


GO
PRINT N'Creating [dbo].[TRA_USER].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_USER].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_USER].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_USER].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Keeps track of all the user activity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER_ACTIVITY';


GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY].[DB_CREATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER_ACTIVITY', @level2type = N'COLUMN', @level2name = N'DB_CREATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY].[DB_CREATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER_ACTIVITY', @level2type = N'COLUMN', @level2name = N'DB_CREATE_USERID';


GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY].[DB_LAST_UPDATE_TIMESTAMP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date and time the record was created or last updated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER_ACTIVITY', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_TIMESTAMP';


GO
PRINT N'Creating [dbo].[TRA_USER_ACTIVITY].[DB_LAST_UPDATE_USERID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user or proxy account that created or last updated the record. ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TRA_USER_ACTIVITY', @level2type = N'COLUMN', @level2name = N'DB_LAST_UPDATE_USERID';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


-- Seed TRA_ROLE Table

IF NOT EXISTS (SELECT 1 FROM TRA_ROLE)
BEGIN
    INSERT INTO TRA_ROLE ([NAME], [DESCRIPTION], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER]) 
		VALUES ('Admin', 'Admin role', GETDATE(), 'Transaction_Dev', GETDATE(), 'Transaction_Dev', 1)
	INSERT INTO TRA_ROLE ([NAME], [DESCRIPTION], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER])
		VALUES ('User', 'User role', GETDATE(), 'Transaction_Dev', GETDATE(), 'Transaction_Dev', 1)
END

-- Seed TRA_REGION Table

IF NOT EXISTS (SELECT 1 FROM TRA_REGION)
BEGIN
    INSERT INTO TRA_REGION ([NAME], [DESCRIPTION], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER])
		VALUES ('HQ', 'HQ', GETDATE(), 'Transaction_Dev', GETDATE(), 'Transaction_Dev', 1)
	INSERT INTO TRA_REGION ([NAME], [DESCRIPTION], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER])
		VALUES ('REGION 1', 'REGION 1', GETDATE(), 'Transaction_Dev', GETDATE(), 'Transaction_Dev', 1)
	INSERT INTO TRA_REGION ([NAME], [DESCRIPTION], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER]) 
		VALUES ('REGION 2', 'REGION 2', GETDATE(), 'Transaction_Dev', GETDATE(), 'Transaction_Dev', 1)
	INSERT INTO TRA_REGION ([NAME], [DESCRIPTION], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER]) 
		VALUES ('REGION 3', 'REGION 3', GETDATE(), 'Transaction_Dev', GETDATE(), 'Transaction_Dev', 1)
END

-- Seed TRA_ACTIVITY Table

IF NOT EXISTS (SELECT 1 FROM TRA_ACTIVITY)
BEGIN
    INSERT INTO TRA_ACTIVITY ([NAME], [DESCRIPTION], [INTENSITY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER])
		VALUES ('Low', 'Low intensity activity', 1, GETDATE(), 'Transaction_Dev', GETDATE(), 'Transaction_Dev', 1)
	INSERT INTO TRA_ACTIVITY ([NAME], [DESCRIPTION], [INTENSITY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER])
		VALUES ('Medium', 'Medium intensity activity', 2, GETDATE(), 'Transaction_Dev', GETDATE(), 'Transaction_Dev', 1)
	INSERT INTO TRA_ACTIVITY ([NAME], [DESCRIPTION], [INTENSITY], [DB_CREATE_TIMESTAMP], [DB_CREATE_USERID], [DB_LAST_UPDATE_TIMESTAMP], [DB_LAST_UPDATE_USERID], [CONCURRENCY_CONTROL_NUMBER]) 
		VALUES ('High', 'High intensity activity', 3, GETDATE(), 'Transaction_Dev', GETDATE(), 'Transaction_Dev', 1)
END
GO

GO
PRINT N'Checking existing data against newly created constraints';



GO
ALTER TABLE [dbo].[TRA_EVENT_TEAM] WITH CHECK CHECK CONSTRAINT [FK_EVENT_TEAM_EVENT];

ALTER TABLE [dbo].[TRA_EVENT_TEAM] WITH CHECK CHECK CONSTRAINT [FK_EVENT_TEAM_TEAM];

ALTER TABLE [dbo].[TRA_EVENT_USER] WITH CHECK CHECK CONSTRAINT [FK_EVENT_USER_EVENT];

ALTER TABLE [dbo].[TRA_EVENT_USER] WITH CHECK CHECK CONSTRAINT [FK_EVENT_USER_USER];

ALTER TABLE [dbo].[TRA_IMAGE] WITH CHECK CHECK CONSTRAINT [TRA_IMAGE_USER];

ALTER TABLE [dbo].[TRA_IMAGE] WITH CHECK CHECK CONSTRAINT [TRA_IMAGE_TEAM];

ALTER TABLE [dbo].[TRA_MEMBER_REQ] WITH CHECK CHECK CONSTRAINT [FK_MEMBER_REQ_TEAM];

ALTER TABLE [dbo].[TRA_MEMBER_REQ] WITH CHECK CHECK CONSTRAINT [FK_MEMBER_REQ_USER];

ALTER TABLE [dbo].[TRA_TEAM] WITH CHECK CHECK CONSTRAINT [FK_TEAM_USER];

ALTER TABLE [dbo].[TRA_TEAM] WITH CHECK CHECK CONSTRAINT [FK_TEAM_REGION];

ALTER TABLE [dbo].[TRA_TOPIC] WITH CHECK CHECK CONSTRAINT [FK_TOPIC_USER];

ALTER TABLE [dbo].[TRA_TOPIC_MESSAGE] WITH CHECK CHECK CONSTRAINT [FK_TOPIC_MESSAGE_TOPIC];

ALTER TABLE [dbo].[TRA_TOPIC_MESSAGE] WITH CHECK CHECK CONSTRAINT [FK_TOPIC_MESSAGE_USER];

ALTER TABLE [dbo].[TRA_USER] WITH CHECK CHECK CONSTRAINT [FK_USER_ROLE];

ALTER TABLE [dbo].[TRA_USER] WITH CHECK CHECK CONSTRAINT [FK_USER_TEAM];

ALTER TABLE [dbo].[TRA_USER] WITH CHECK CHECK CONSTRAINT [FK_USER_REGION];

ALTER TABLE [dbo].[TRA_USER_ACTIVITY] WITH CHECK CHECK CONSTRAINT [FK_USER_ACTIVITY_ACTIVITY];

ALTER TABLE [dbo].[TRA_USER_ACTIVITY] WITH CHECK CHECK CONSTRAINT [FK_USER_ACTIVITY_USER];

ALTER TABLE [dbo].[TRA_USER_ACTIVITY] WITH CHECK CHECK CONSTRAINT [FK_USER_ACTIVITY_TEAM];

ALTER TABLE [dbo].[TRA_USER_ACTIVITY] WITH CHECK CHECK CONSTRAINT [FK_USER_ACTIVITY_EVENT];


GO
PRINT N'Update complete.';


GO
